//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""4194e79f-591d-4494-b9cc-d2ca5da15252"",
            ""actions"": [
                {
                    ""name"": ""Flag"",
                    ""type"": ""Button"",
                    ""id"": ""c697e5ed-0973-400a-940c-574794b94be8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""12a90df9-ce16-404d-a116-5b8fce1c0ae0"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraLook"",
                    ""type"": ""Value"",
                    ""id"": ""a4f71443-5a30-4728-872d-9af94ffef057"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AltitudeUp"",
                    ""type"": ""Button"",
                    ""id"": ""6f742642-5efc-4353-8d92-d9379d4f8f7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltitudeDown"",
                    ""type"": ""Button"",
                    ""id"": ""2ace9e9f-d5bf-43f7-8d48-af287fb3033e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugL"",
                    ""type"": ""Button"",
                    ""id"": ""c3df409a-530f-4ca7-a8e2-5d49f3946c80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugR"",
                    ""type"": ""Button"",
                    ""id"": ""b8e20a5d-9d70-4573-8c52-01106b24bd31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugD"",
                    ""type"": ""Button"",
                    ""id"": ""e654ad78-0cec-434f-b927-f9279cd8dd50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugU"",
                    ""type"": ""Button"",
                    ""id"": ""7036f78a-efc2-46dd-9e91-4cbe34f98cbe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4f41f838-e708-4645-8f3a-f3952028defb"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Flag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""238d8fb5-89ca-4dcf-a274-52b66f03d588"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Flag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e69a9129-36bb-40f1-a4ab-b27f20f18e2e"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4f983de6-c4ae-4b4b-944d-a31354aa1906"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""376d3094-3a02-4f46-8990-931b5fb6408a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e10743de-2f19-4325-b59c-b884a15f60ce"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4ba43fa1-f02b-4804-9fc7-02964033189b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ffffac43-b996-41fe-819c-abea9b78f338"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4767c29c-04d0-41a1-b89f-43b82853ac6e"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8c4cbe5e-edb2-4d23-892b-4603c644e5f4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=2,y=2)"",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8503b2a7-0c39-431b-b0dc-0f9ab412ae60"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a318c6bf-f54c-4fee-b9e2-7e5863fb3a8f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f1b121b5-ab59-4f3b-aa04-d533782739fb"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aae993b7-a72b-4c6c-8e23-1a7d7244fc14"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8cc12780-dc11-4b3e-abcb-629ea017d802"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AltitudeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90c15307-f942-44d5-b3c7-3eec1b75de0a"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AltitudeUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42901b8d-9bc4-4640-ad51-329722e6a5ef"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""AltitudeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c095e02e-6366-4544-b7c5-d71c7017b1ab"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AltitudeDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5cf63aba-d3a5-4b0c-a861-7bc63504137c"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f930402-204b-4495-8bb0-98f196bb3c2b"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35c7b9ed-4199-44b2-bb3f-5ee634a7ab39"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9723d3dc-a7af-49e0-b362-facf40ffe564"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugU"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Flag = m_Gameplay.FindAction("Flag", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_CameraLook = m_Gameplay.FindAction("CameraLook", throwIfNotFound: true);
        m_Gameplay_AltitudeUp = m_Gameplay.FindAction("AltitudeUp", throwIfNotFound: true);
        m_Gameplay_AltitudeDown = m_Gameplay.FindAction("AltitudeDown", throwIfNotFound: true);
        m_Gameplay_DebugL = m_Gameplay.FindAction("DebugL", throwIfNotFound: true);
        m_Gameplay_DebugR = m_Gameplay.FindAction("DebugR", throwIfNotFound: true);
        m_Gameplay_DebugD = m_Gameplay.FindAction("DebugD", throwIfNotFound: true);
        m_Gameplay_DebugU = m_Gameplay.FindAction("DebugU", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Flag;
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_CameraLook;
    private readonly InputAction m_Gameplay_AltitudeUp;
    private readonly InputAction m_Gameplay_AltitudeDown;
    private readonly InputAction m_Gameplay_DebugL;
    private readonly InputAction m_Gameplay_DebugR;
    private readonly InputAction m_Gameplay_DebugD;
    private readonly InputAction m_Gameplay_DebugU;
    public struct GameplayActions
    {
        private @PlayerControls m_Wrapper;
        public GameplayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Flag => m_Wrapper.m_Gameplay_Flag;
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @CameraLook => m_Wrapper.m_Gameplay_CameraLook;
        public InputAction @AltitudeUp => m_Wrapper.m_Gameplay_AltitudeUp;
        public InputAction @AltitudeDown => m_Wrapper.m_Gameplay_AltitudeDown;
        public InputAction @DebugL => m_Wrapper.m_Gameplay_DebugL;
        public InputAction @DebugR => m_Wrapper.m_Gameplay_DebugR;
        public InputAction @DebugD => m_Wrapper.m_Gameplay_DebugD;
        public InputAction @DebugU => m_Wrapper.m_Gameplay_DebugU;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Flag.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFlag;
                @Flag.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFlag;
                @Flag.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFlag;
                @Move.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMove;
                @CameraLook.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraLook;
                @CameraLook.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraLook;
                @CameraLook.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnCameraLook;
                @AltitudeUp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAltitudeUp;
                @AltitudeUp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAltitudeUp;
                @AltitudeUp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAltitudeUp;
                @AltitudeDown.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAltitudeDown;
                @AltitudeDown.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAltitudeDown;
                @AltitudeDown.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAltitudeDown;
                @DebugL.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugL;
                @DebugL.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugL;
                @DebugL.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugL;
                @DebugR.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugR;
                @DebugR.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugR;
                @DebugR.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugR;
                @DebugD.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugD;
                @DebugD.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugD;
                @DebugD.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugD;
                @DebugU.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugU;
                @DebugU.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugU;
                @DebugU.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDebugU;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Flag.started += instance.OnFlag;
                @Flag.performed += instance.OnFlag;
                @Flag.canceled += instance.OnFlag;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @CameraLook.started += instance.OnCameraLook;
                @CameraLook.performed += instance.OnCameraLook;
                @CameraLook.canceled += instance.OnCameraLook;
                @AltitudeUp.started += instance.OnAltitudeUp;
                @AltitudeUp.performed += instance.OnAltitudeUp;
                @AltitudeUp.canceled += instance.OnAltitudeUp;
                @AltitudeDown.started += instance.OnAltitudeDown;
                @AltitudeDown.performed += instance.OnAltitudeDown;
                @AltitudeDown.canceled += instance.OnAltitudeDown;
                @DebugL.started += instance.OnDebugL;
                @DebugL.performed += instance.OnDebugL;
                @DebugL.canceled += instance.OnDebugL;
                @DebugR.started += instance.OnDebugR;
                @DebugR.performed += instance.OnDebugR;
                @DebugR.canceled += instance.OnDebugR;
                @DebugD.started += instance.OnDebugD;
                @DebugD.performed += instance.OnDebugD;
                @DebugD.canceled += instance.OnDebugD;
                @DebugU.started += instance.OnDebugU;
                @DebugU.performed += instance.OnDebugU;
                @DebugU.canceled += instance.OnDebugU;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnFlag(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnAltitudeUp(InputAction.CallbackContext context);
        void OnAltitudeDown(InputAction.CallbackContext context);
        void OnDebugL(InputAction.CallbackContext context);
        void OnDebugR(InputAction.CallbackContext context);
        void OnDebugD(InputAction.CallbackContext context);
        void OnDebugU(InputAction.CallbackContext context);
    }
}
